#pragma once

#include <nlohmann/json.hpp>
#include <string>

#include "models/User.hpp"
#include "utils/Hash.hpp"
#include "utils/MessageHandler.hpp"
#include "utils/Storage.hpp"

using json = nlohmann::json;

namespace services {

class UserService {
 public:
  // User data validation
  static void validateUserData(const std::string& username,
                               const std::string& email);

  // User creation
  static models::User createUser(const std::string& username,
                                 const std::string& password,
                                 const std::string& email,
                                 const std::string& fullName,
                                 const bool isAdmin = false,
                                 const bool isPasswordAutoGenerated = false);

  // User persistence
  static bool saveUser(const models::User& user);

  // User queries
  static bool findUserById(const int userId, json& userData);
  static bool findUserByUsername(const std::string& username, json& userData);
  static std::string getUserEmail(int userId);

 private:
  static bool isUsernameExists(const json& users, const std::string& username);
  static bool isEmailExists(const json& users, const std::string& email);
};

}  // namespace services