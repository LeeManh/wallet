#include "views/MainView.hpp"

#include "controllers/AuthController.hpp"
#include "utils/Input.hpp"
#include "utils/MessageHandler.hpp"
#include "views/AdminView.hpp"
#include "views/CustomerView.hpp"
#include "views/RegistrationView.hpp"

namespace views {

/**
 * @brief Hiển thị menu chính của hệ thống.
 *
 * Mục đích:
 *   Hiển thị giao diện lựa chọn để người dùng có thể đăng nhập, đăng ký hoặc thoát chương trình.
 *
 * Input:
 *   - Không có tham số đầu vào.
 *
 * Output:
 *   - Không trả về giá trị.
 *   - Thực hiện điều hướng sang chức năng tương ứng dựa trên lựa chọn của người dùng.
 */
void MainView::display() {
  while (true) {
    utils::MessageHandler::logMessage(
        "┌─────────────────────────────────────────────┐");
    utils::MessageHandler::logMessage(
        "│      HỆ THỐNG QUẢN LÝ VÍ ĐIỂM THƯỞNG        │");
    utils::MessageHandler::logMessage(
        "├─────────────────────────────────────────────┤");
    utils::MessageHandler::logMessage(
        "│ [1] Đăng nhập                               │");
    utils::MessageHandler::logMessage(
        "│ [2] Đăng ký                                 │");
    utils::MessageHandler::logMessage(
        "│ [0] Thoát                                   │");
    utils::MessageHandler::logMessage(
        "└─────────────────────────────────────────────┘");

    int choice = utils::input::getChoice(0, 2);

    switch (choice) {
      case 1:
        handleLogin();
        break;
      case 2:
        handleRegistration();
        break;
      case 0:
        utils::MessageHandler::logSuccess(
            "Cảm ơn bạn đã sử dụng chương trình!");
        return;
    }
  }
}

/**
 * @brief Xử lý quá trình đăng nhập của người dùng.
 *
 * Mục đích:
 *   Nhận thông tin đăng nhập, xác thực tài khoản, và điều hướng tới giao diện tương ứng
 *   (quản trị hoặc khách hàng) khi đăng nhập thành công.
 *
 * Input:
 *   - Không có tham số đầu vào (thông tin được nhập từ bàn phím).
 *
 * Output:
 *   - Không trả về giá trị.
 *   - Mở giao diện phù hợp nếu đăng nhập thành công.
 */
void MainView::handleLogin() {
  utils::MessageHandler::logMessage(
      "┌─────────────────────────────────────────────┐");
  utils::MessageHandler::logMessage(
      "│                 ĐĂNG NHẬP                   │");
  utils::MessageHandler::logMessage(
      "└─────────────────────────────────────────────┘");

  std::string username = utils::input::getInput("Nhập tên đăng nhập: ");
  std::string password = utils::input::getInput("Nhập mật khẩu: ");

  auto [success, userId, isAdmin, isPasswordAutoGenerated] =
      controllers::AuthController::login(username, password);

  if (!success) return;

  if (isAdmin) {
    views::AdminView adminView;
    adminView.userId = userId;
    adminView.display();
  } else {
    views::CustomerView customerView;
    customerView.userId = userId;
    if(isPasswordAutoGenerated){
      customerView.handleChangePassword();
    }
    customerView.display();
  }
}

/**
 * @brief Điều hướng người dùng sang giao diện đăng ký tài khoản.
 *
 * Mục đích:
 *   Cho phép người dùng tạo mới tài khoản trong hệ thống.
 *
 * Input:
 *   - Không có tham số đầu vào.
 *
 * Output:
 *   - Không trả về giá trị.
 *   - Hiển thị giao diện đăng ký tài khoản.
 */
void MainView::handleRegistration() {
  views::RegistrationView registrationView;
  registrationView.display();
}

}  // namespace views