#include "models/User.hpp"

#include <string>

#include "utils/Hash.hpp"

namespace models {

// Constructor
User::User(int id, const std::string& username, const std::string& passwordHash,
           const std::string& email, const std::string& fullName, bool isAdmin,
           bool isPasswordAutoGenerated)
    : id(id),
      username(username),
      passwordHash(passwordHash),
      email(email),
      fullName(fullName),
      isAdmin(isAdmin),
      isPasswordAutoGenerated(isPasswordAutoGenerated) {}

// Getters
int User::getId() const { return id; }
std::string User::getUsername() const { return username; }
std::string User::getFullName() const { return fullName; }
std::string User::getEmail() const { return email; }
bool User::isAdminUser() const { return isAdmin; }
std::string User::getPasswordHash() const { return passwordHash; }
bool User::getIsPasswordAutoGenerated() const {
  return isPasswordAutoGenerated;
}

// Setters
void User::setIsPasswordAutoGenerated(bool value) {
  isPasswordAutoGenerated = value;
}

json User::toJson() const {
  json userData;
  userData["id"] = id;
  userData["username"] = username;
  userData["passwordHash"] = passwordHash;
  userData["email"] = email;
  userData["fullName"] = fullName;
  userData["isAdmin"] = isAdmin;
  userData["isPasswordAutoGenerated"] = isPasswordAutoGenerated;
  return userData;
}

User User::fromJson(const json& userData) {
  return User(
      userData["id"].get<int>(), userData["username"].get<std::string>(),
      userData["passwordHash"].get<std::string>(),
      userData["email"].get<std::string>(),
      userData["fullName"].get<std::string>(), userData["isAdmin"].get<bool>(),
      userData["isPasswordAutoGenerated"].get<bool>());
}

}  // namespace models